kind: pipeline
type: docker
name: test

steps:
- name: test
  image: python
  commands:
  - pip install -r requirements.txt
  - pytest
  
---
kind: pipeline
type: exec
name: deploy

platform:
  os: linux
  arch: amd64

steps:
- name: docker-composer
  commands:   
  - pwd
  - ls
  - bash deploy
  - cd /tmp/flaskapp-deploy
  - ls
  - docker-compose up -d --build --force-recreate
  when:
    branch:
    - master

node:
  foo: bar

depends_on:
- test

---
kind: pipeline
type: docker
name: after

steps:
- name: notify slack
  image: plugins/slack
  settings:
    webhook: 
      from_secret: slack_webhook_url
    username: drone
    channel: dev
    template: >
      {{#if build.pull }}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
      {{/if}}

      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>

      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>

      Author: {{ build.author }}
      
      <{{ build.link }}|Visit build page ↗>  

depends_on:
- test    
- deploy
